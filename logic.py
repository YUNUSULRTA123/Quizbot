import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
# –ó–∞–¥–∞–Ω–∏–µ 2 - –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π –Ω—É–∂–Ω—ã–µ –∫–ª–∞—Å—Å—ã

class Question:

    def __init__(self, text, answer_id, *options):
        self.__text = text
        self.__answer_id = answer_id
        self.options = options

    # –ó–∞–¥–∞–Ω–∏–µ 1 - –°–æ–∑–¥–∞–π –≥–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞
    @property
    def text(self):
        return self.__text

    def gen_markup(self):
        # –ó–∞–¥–∞–Ω–∏–µ 3 - –°–æ–∑–¥–∞–π –º–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        markup = InlineKeyboardMarkup()
        markup.row_width = len(self.options)
        for i, option in enumerate(self.options):
            if i == self.__answer_id:
                markup.add(InlineKeyboardButton(option, callback_data='correct'))
            else:
                markup.add(InlineKeyboardButton(option, callback_data='wrong'))
        return markup

# –ó–∞–¥–∞–Ω–∏–µ 4 - –∑–∞–ø–æ–ª–Ω–∏ —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏
quiz_questions = [
    Question("–ö–∞–∫ —Å–Ω—è—Ç—å –æ–¥–µ–∂–¥—É —Å –±–∞–ª–∫–æ–Ω–∞", 1, "–í—ã—Ç–∞—â–∏—Ç—å —à–ø–∏–ª–∫—É –∏ –≤–∑—è—Ç—å –æ–¥–µ–∂–¥—É", "–ü–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏", "–í–∑—è—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Å–Ω—è—Ç—å –≤–∏–¥–µ–æ"),
    Question("–ö—Ç–æ —Ç–∞–∫–æ–π Drake?", 0, "–ú–µ–º", "–†—ç–ø–µ—Ä", "–Æ—Ç—É–±–µ—Ä"),
    Question("–ö–∞–∫ —É—á–∏—Ç—å —É—Ä–æ–∫–∏?", 2, "–ò—Ö –Ω–µ –¥–µ–ª–∞—Ç—å", "–û—Ç–∫—Ä—ã—Ç—å –∫–Ω–∏–≥—É –∏ —É—á–∏—Ç—å", "–°—Ç–∞–≤–∏—Ç—å –∫–Ω–∏–≥–∏ –Ω–∞ —Å—Ç—É–ª—å—è –∏ —É—á–∏—Ç—å –∏—Ö (–ï—Å–ª–∏ –ø–ª–æ—Ö–æ —Å–µ–±—è –≤–∏–¥—É—Ç –≤—ã–≥–æ–Ω—è–π—Ç–µ –∏—Ö –∏–∑ –∫–ª–∞—Å—Å–∞ –∏ —Å—Ç–∞–≤—å—Ç–µ 2)"),
    Question("–ö–∞–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω —Å–∞–º—ã–π –ª—É—á—à–∏–π?", 2, "XIAOMI","iPhone", "Nokia", "Samsung"),
    Question("–ö–∞–∫–æ–π –∏–∑ –Ω–∏—Ö —Å–∞–º–æ–ª—ë—Ç" , 1,"Ford","BNW", "Mercedes"),
    Question("–ü–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞", 1,"–î–∞üëç", "–ù–µ—Çüëé")
]